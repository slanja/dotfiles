(deflisten workspace "scripts/workspace")

(defwidget bar []
    (box :class "eww_bar" 
         :orientation "v" 
         :vexpand "false" 
         :hexpand "false"
         :stacking "bg"
    (workspaces)
    (bottom)
))

;; Workspaces ;;
(defwidget workspaces []
  (box :orientation "v"
       :space-evenly false
       :halign "start"
       :spacing 10
       :class "workspaces"
        (button :onclick "wmctrl -s 0" "○")
        (button :onclick "wmctrl -s 1" "○")
        (button :onclick "wmctrl -s 2" "○")
        (button :onclick "wmctrl -s 3" "○")
        (button :onclick "wmctrl -s 4" "○")
        (button :onclick "wmctrl -s 5" "○")
        (button :onclick "wmctrl -s 6" "○")
        (button :onclick "wmctrl -s 7" "○")
        (button :onclick "wmctrl -s 8" "○")
    )
)



(defpoll bat-level   :interval "1s"  "cat /sys/class/power_supply/BAT1/capacity")
(defpoll bat   :interval "10s"  "/home/slanja/.config/eww/bar/scripts/battery.sh")
(defpoll date   :interval "1s"  "date")


(defpoll hour   :interval "0s"  "date '+%H'")
(defpoll min    :interval "0s"  "date '+%M'")


;; battery, time and profile picture ;;
(defwidget bottom []
    (box :valign "end"
         :orientation "v" 
         :spacing 10

        (box    :class "battery" 
                :tooltip bat-level
            (button :onclick "eww --config ~/.config/eww/battery open-many battery_control --toggle"   
                    :class "bat"
                    :tooltip bat
                    "ϟ"
                )
        )

        (box    :class "time"
                :orientation "v" 
                :tooltip date
            (button :onclick ""   
                    :class "time-hour" hour)
            (button :onclick ""   
                    :class "time-min"  min)
        )

        (box    :class "profile-pic"
            (button :onclick ""
                (image  :path "/home/slanja/.config/eww/bar/profile.png"
                        :image-width 45
                        :image-height 45
                )
            )
        )
    )
)


;; Dock ;;
(defwindow dock
        :monitor 0
        :geometry (geometry :x "0%"
            :y "0%"
            :width "70px"
            :height "100%"
            :anchor "top left")
        :reserve (struts :distance "70px" :side "left")
        :windowtype "dock"
        :wm-ignore false
    (bar)
)